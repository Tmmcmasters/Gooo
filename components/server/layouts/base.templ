package serverLayout

import "PersonalPortfolio/components/server/generated"
import "PersonalPortfolio/helpers"

templ Base(title string) {
	<!DOCTYPE html>
	<html lang="en" class={ helpers.GetTheme(ctx) }>
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			// <link href="/static/assets/css/output-tw.css" rel="stylesheet"/>
			@serverGenerated.Tailwind()
			// <link rel="preload" href="/static/assets/css/output-tw.css" as="style" onload="this.onload=null;this.rel='stylesheet'"/>
			// <link href="/gen/css/main.css" rel="stylesheet"/>
			@Head(title)
			if helpers.IsLocal(ctx) {
				<script>

				function setupReloadSocket() {
					let ws;
					function connect() {
						ws = new WebSocket("ws://" + location.host + "/ws/reload");

						ws.onopen = () => {
							console.log("[dev] Connected to reload socket");
						};	

						ws.onclose = () => {
							console.log("[dev] WebSocket closed, reconnecting in 1s...");
							setTimeout(connect, 1000);
						};

						ws.onmessage = (event) => {
							if (event.data === "reload") {
								location.reload();
						}
						}

						ws.onerror = (err) => {
							console.error(`[dev] Error with reload socket ${err}`);
							ws.close();
						};
					}

					connect();
				}

				if (window.location.hostname === "localhost") {
					setupReloadSocket();
				}
</script>
			}
		</head>
		<body>
			{ children... }
		</body>
	</html>
}
